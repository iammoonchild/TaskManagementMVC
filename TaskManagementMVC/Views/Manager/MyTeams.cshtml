@using TaskManagementMVC.Entities.ViewModels.Manager
@using TaskManagementMVC.Entities.ViewModels.UserViewModels;
@model IEnumerable<TeamListingViewModel>
@{
    ViewData["Title"] = "PTM | My Teams";
    ViewBag.Title = "PTM | My Teams";
    ViewBag.temp = "hehhehehe";
}


@if (TempData["LoginSuccess"] != null)
{
    Html.RenderPartial("_ToastSuccess", TempData["LoginSuccess"]);
}

<div class="container-fluid" id="main-manager-dashboard" style="height:100vh">
    @if (Model.Count() > 0)
    {
        <partial name="~/Views/Shared/Manager/_TeamListing.cshtml" , model="Model" />
    }
    else
    {
        <partial name="~/Views/Shared/Manager/_CreateTeam.cshtml" model="new TeamMembersViewModel()" />
    }
</div>

<script>
    // Define a JavaScript array to hold team names
    var team= [];

    // Use Razor to populate the JavaScript array
    @foreach (var item in Model)
    {
        <text>
            team.push(@Html.Raw(Json.Serialize(item)));
        </text>
    }

        // Iterate over the JavaScript array and log each team name
        team.forEach(function (team) {
            console.log(team);
        });
</script>
