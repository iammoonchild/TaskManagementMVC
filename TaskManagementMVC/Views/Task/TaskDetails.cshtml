@using TaskManagementMVC.Entities.ViewModels.TasksViewModels;
@model TaskDetailsViewModel
@{

}

<div class="container mt-5">
    <div class="row my-3 justify-content-end">
        <button class="btn btn-primary">Back</button>
    </div>
    <div class="row">
        <h2>Task Details</h2>
        <hr>
        <div class="col-md-6 mb-3">
            <label for="taskTitle" class="form-label">Task Title</label>
            <input type="text" asp-for="Title" class="form-control" id="taskTitle" value="Task Title">
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label for="taskStatus" class="form-label">Status</label>
            <input type="text" asp-for="Status" class="form-control" id="taskStatus" value="Pending" readonly>
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
        <div class="col-md-12 mb-3">
            <label for="taskDescription" class="form-label">Description</label>
            <textarea class="form-control" asp-for="Description" id="taskDescription" rows="4">Description of the task</textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label for="taskType" class="form-label">Type</label>
            <input type="text" asp-for="Type" class="form-control" id="taskType" value="Bug" readonly>
            <span asp-validation-for="Type" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label for="assignedTo" class="form-label">Assigned To</label>
            <div class="d-flex align-items-center">
                @if(Model.Avatar!=null)
                {
                    <img src="@Model.Avatar" alt="Avatar" class="rounded-circle me-2"
                     style="width: 30px; height: 30px;">
                }
                else
                {
                    <img src="~/images/memberavatar.png" alt="Avatar" class="rounded-circle me-2"
                     style="width: 30px; height: 30px;">
                }
                <span>@Model.AssignedTo</span>
            </div>
        </div>
        <div class="col-md-6 mb-3">
            <label for="createdDate" class="form-label">Created Date</label>
            <input type="text" asp-for="CreatedDate" class="form-control" id="createdDate" value="2024-04-29" readonly>
            <span asp-validation-for="CreatedDate" class="text-danger"></span>
        </div>
        <div class="col-md-6 mb-3">
            <label for="deadline" class="form-label">Deadline</label>
            <input type="text" asp-for="Deadline" class="form-control" id="deadline" value="2024-05-05" readonly>
            <span asp-validation-for="Deadline" class="text-danger"></span>
        </div>
        <div class="col-12 text-end">
            <button class="text-dark btn btn-warning">Save Changes</button>
        </div>
    </div>


    <div class="row justify-content-start">
        <div class="col-md-6">
            <h2 class="mt-2">Task Logs</h2>
            <hr>
            <div id="task-logs-wrapper">
                <partial name="_TaskLogs" model="Model.Logs" />
            </div>
        </div>
        <div class="col-md-6">
            <h2 class="mt-2">Comments</h2>
            <hr>
            <div class="mb-3">
                <label for="comment" class="form-label">Add Comment</label>
                <textarea class="form-control" asp-for="Comment" id="comment" rows="4"></textarea>
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <button type="button" (click)="SaveComment()" class="btn btn-primary">Comment</button>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        function SaveComment() {
            var comment = document.getElementById("comment").value;
            $.ajax({
                type: "POST",
                url: "/Task/SaveComment",
                data: { comment: comment },
                success: function (response) {
                    console.log(response);
                    $("#task-logs-wrapper").html(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}
